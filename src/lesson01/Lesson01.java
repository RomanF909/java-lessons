package lesson01;

// однострочный комментарий
/*
многострочный комментарий
 */

// Имя класса должно соответствовать имения файла,
// Имя класса начинается с заглавной буквы
// если имя состоит из нескольких слов, то каждое последующее тоже
// с заглавной буквы (PascalCase)
public class Lesson01 {
    // psvm + Enter
    // метод main - точка входа в программу, после этого кода начинается исполнение программы
    public static void main(String[] args) {
        // sout + Enter
        // вывод информации (данных) в консоль
        // в конце инструкций всегда ;
        // если выделено красным, то это ошибка
        System.out.println("Lesson 1");

        // переменные
        // Объявление переменных: тип_данных имяПеременной (CamelCase)
        int size; // объявили переменную типа int (4 байта)с именем size
        size = 1000; // переменной size присвоили значение 1000

        int count = 750; // объявили и сразу присвоили значение, чаще используется
        count = 620;
        System.out.println(count);

        // byte short int long - если целые числа

        short one = 230; // переменная one типа short со значением 230
        System.out.println(one);

        int length = 300, width = 450;  // можно объявлять несколько переменных одного типа через запятую одной строкой

        length = 900_100; // при записи чисел можно использовать _ для удобства, но число не меняется, будет 900100
        // при выводе на экран _ не будет отображаться
        System.out.println(length); //выведет на экран 900100

        long bigData01 = 8001;
        long bigData02 = 800_000_000_000L; //если типу long присвоили значение больше диапазона типа int, то в конце ставим L
        // если целое число больше long то можно использовать дробный тип double или ссылочные типы

        // float или double - дробные сисла на 4 и 8 байт (double больше long)
        double temp01 = 12.9;
        float temp02 = 12.9F; // F или f в конце значения подтверждаем тип float
// для точных расчетов нельзя использовать float и double, нужен точный класс java.math.BigDecimal

        // System.out.println(bigData01 / 0); // целые числа нельзя делить на 0
        // System.out.println(temp01 / 0); // Infinity - не ошибка, а бесконечность
        // нужно проверять данные, чтобы избегать деления на 0

        boolean isActive = true; //boolean имеет значения true или false, как "если"
        boolean isClose = false;

        // приведение типов
        // 1. автоматическое - само по себе, больше применяется к примитивным типам
        // 2. явное - отвечает за это разработчик, больше к ссылочным типам
        int height01 = 1900;
        long height02 = height01; // автоматическое приведение типов, значение height01 сначала становится лонг, а потом присваивается height02
        // можно привести более узкий диапазон к типов к расширенному, но не наоборот

        /*byte smallValue01 = 10;
        int smallValue02 = smallValue01;*/ //так работает, но не наоборот
        /* int smallValue01 = 10;
        byte smallValue02 = smallValue01;*/ // будет ошибка

        int smallValue01 = 10;
        byte smallValue02 = (byte) smallValue01; //явное приведение, нужно следить за соблюдением диапазонов

// операнд оператор
        // 2 + 4 , 2 и 4 - операнды, + - оператор бинарный (так как с 2 операндами работает)
        // -8, - унарный оператор, так как с одним операндом работает

      //арифметические операторы это +, -, *, /, % (взятие остатка от деления)

        int a = 10, b = 13;
        int c01 = a / b; //результат деления целого числа на целое только целое, не может быть дробного
        System.out.println(c01); // результат будет целый, в данном случае 0, если 13/10, то 1

        double c02 = (double) a / b; // 0.0, сначала в скобках потом приведение
        double c03 = (double) a / b; // 0,7692307692307692, так как сначала приведение, потом операция
        System.out.println(c03);

        int x = 90;
        long y = 10000;
        long c04 = x * y; //если одно значение long, то результат повышается до long
        // сложение byte или short дает int



    }

}
